{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","marginBottom","padding","backgroundImage","width","height","backgroundPosition","backgroundSize","heroTypography","color","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","display","flexDirection","justifyContent","cardMedia","cardContent","margin","flexGrow","alignItems","chipGrid","flexWrap","footer","Copyright","Typography","variant","align","Link","href","Date","getFullYear","getOrigins","db","items","push","concat","Array","from","Set","map","a","SelectOrigin","props","React","useState","origins","age","setAge","FormControl","InputLabel","id","Select","style","minWidth","labelId","value","onChange","event","target","onSelectChange","state","origin","MenuItem","key","SelectTags","tags","tag","setTag","multiple","input","Input","eventFiltered","length","filter","elem","Post","classes","Grid","item","xs","sm","md","Card","className","CardContent","gutterBottom","component","cardCont","link","title","fav","desc","CardActionArea","Box","Chip","size","label","SuchEmpty","paragraph","CardGrid","Container","maxWidth","container","tagList","post","reduce","b","App","ReactGA","initialize","pageview","data","fltr","setFilter","favState","setFav","tgList","unshift","CssBaseline","justify","FormControlLabel","control","Checkbox","checked","tmp","intersection","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.60f2012a.chunk.js","sourcesContent":["import React from 'react';\nimport CardActionArea from '@material-ui/core/CardActionArea';\n//import CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport Chip from '@material-ui/core/Chip';\nimport data from \"./dbFiltered\"; \nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FormControl, CardHeader } from '@material-ui/core';\nimport { useState } from 'react';\nimport {intersection} from 'lodash'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport ReactGA from 'react-ga';\nimport Input from '@material-ui/core/Input';\n\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(8, 8, 8),\n    backgroundImage:\"url(\" + \"https://blog.scaredpanties.com/content/images/size/w2000/2019/06/B0010006_extended2.jpg\"+\")\",\n    \n    width:'100%',\n    height:' 100%',\n\n    \n    backgroundPosition: 'center',\n    \n    backgroundSize: 'cover'\n  },\n  heroTypography:{\n    color:'white'\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    \n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: \"space-between\"\n    \n    \n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    margin:\"200px\",\n    flexGrow: 1,\n    alignItems:\"flex-end\",\n    \n  },\n  chipGrid:{\n    display:\"flex\",\n    flexWrap: 'wrap',\n    justifyContent: \"space-evenly\",\n    \n    \n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n    \n    \n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\n\n\nfunction initializeReactGAmain() {\n  ReactGA.initialize('UA-39274880-3');\n  ReactGA.pageview('/catalog');\n}\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://blog.scaredpanties.com/\">\n        scaredpanties\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\nconst getOrigins = (db) =>{\n  let items=[]\n  items.push('All')\n  items=items.concat(Array.from(new Set(db.map(a=>a[\"origin\"]))))\n  return items\n}\n\nfunction SelectOrigin(props){\n  const [age, setAge] = React.useState(props.origins[0]);\n  const handleChange = event => {\n    setAge(event.target.value);\n    props.onSelectChange(state => ({ ...state,origin:event.target.value }))\n    \n  };\n  \n  return(\n    <div>\n    <FormControl>\n    <InputLabel id=\"origin-select\">Brand origin country</InputLabel>\n    <Select\n          style= {{minWidth:'230px'}}\n          labelId=\"origin-select\"\n          id=\"origin-select\"\n          \n          value={age}\n          onChange={handleChange}>\n          {props.origins.map((origin)=> <MenuItem key={origin} value={origin}>{origin}</MenuItem>)}\n          \n        </Select>\n      </FormControl>\n    </div>\n  )\n}\n\nfunction SelectTags(props) {\n  \n  const [tag, setTag] = React.useState([props.tags[0]]);\n\n  const handleChange = event => { \n    //console.log(event.target.value)\n    let eventFiltered=event.target.value\n    \n\n    if (eventFiltered[0]==='All' && eventFiltered.length>1){\n      eventFiltered=eventFiltered.filter(elem=>elem!=='All')\n    }\n    if (eventFiltered.length<1){\n      eventFiltered.push('All')\n    }\n\n    if (eventFiltered[(eventFiltered.length-1)]==='All' && eventFiltered.length>1){\n      eventFiltered=['All']\n    }\n    setTag(eventFiltered);\n    props.onSelectChange(state => ({ ...state,tags:eventFiltered}))\n    \n  };\n  \n  return(\n    <div>\n    <FormControl>\n    <InputLabel id=\"tag-select\">Tag selector</InputLabel>\n    <Select\n          style= {{minWidth:'230px'}}\n          labelId=\"tag-select\"\n          id=\"tag-select\"\n          multiple\n          input={<Input/>}\n          value={tag}\n          onChange={handleChange}>\n          {props.tags.map((tag)=> <MenuItem key={tag} value={tag}>{tag}</MenuItem>)}\n        </Select>\n      </FormControl>\n    </div>\n  )\n}\n\nfunction Post(props){\n  const classes = useStyles();\n  return(\n    <Grid item  xs={12} sm={6} md={4}>\n                <Card  className={props.classes.card}>\n                  <CardContent className={props.cardContent} >\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      <Link href={props.cardCont.link}>{props.cardCont.title}</Link>\n                      { props.cardCont.fav===true ? <Favorite style={{color:\"red\"}}/>:null} \n                    </Typography>\n                    \n                    <Typography gutterBottom variant=\"h6\">{props.cardCont.origin}</Typography>\n                    <Typography >\n                      {props.cardCont.desc}\n                    </Typography>\n                    \n                  </CardContent>\n                  <CardActionArea>\n                  <Box className={classes.chipGrid}>\n                    {props.cardCont.tags.map(tag => <Chip size=\"small\" label={tag}/>)}\n                    </Box> \n\n                  </CardActionArea>\n                  \n                     \n                      \n                  \n                </Card>\n              </Grid>\n  )\n}\n\nfunction SuchEmpty(props){\n  return (\n     <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n     Such empty!!! Come back soon, we will add more...\n     </Typography>\n  )\n}\n\nfunction CardGrid(props){\n  const classes = useStyles();\n  \n  return (\n    <Container className={classes.cardGrid} maxWidth=\"md\"  >\n          {props.db.length>0?\n          <Grid container spacing={4}   alignItems=\"stretch\">\n            {props.db.map(card => (\n              <Post classes={classes} cardCont={card} key={card.title}/>\n            ))}\n          </Grid>\n          :<SuchEmpty/>}\n        </Container>\n  )\n}\n\nlet tagList = (db) => {\n  return Array.from(new Set(db.map(post => post.tags).reduce((a,b) => a.concat(b))))\n}\n\nfunction filterData(data,fltr){\n   if (fltr.origin!=='All') data = data.filter(elem=>elem.origin===fltr.origin)\n   if (fltr.fav===true) data=data.filter(elem=>elem.fav===true)\n   if (fltr.tags[0]!=='All') data = data.filter(elem=>intersection(elem.tags,fltr.tags).length!==0)\n   //console.log(fltr.tags)\n   return data\n}\n\n\nfunction App() {\n  let initFilter={\n    origin:\"All\",\n    tags:['All'],\n    fav:false\n  }\n  \n  const handleFavChange = event => {\n    \n    setFav(event.target.checked);\n    let tmp=event.target.checked\n    setFilter(state => ({ ...state,fav:tmp}))\n    \n  };\n \n  initializeReactGAmain()\n  const classes = useStyles();\n  const [filter, setFilter] = useState(initFilter);\n  const [favState, setFav] = React.useState(false)\n\n  let tgList=tagList(data)\n               \n  tgList.unshift('All')\n  \n  return (\n   <div>\n    <CssBaseline />\n    <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" className={classes.heroTypography} gutterBottom>\n              scaredpanties\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" className={classes.heroTypography} paragraph>\n              Lingerie brands catalog\n            </Typography>\n          </Container>\n        </div>\n    <Container  maxWidth=\"md\" >\n        <Grid container spacing={2} justify=\"center\">\n          <Grid item>\n            < SelectOrigin onSelectChange={setFilter} origins={getOrigins(data)}/>\n          </Grid>\n          <Grid key='tagSelectorComp' item>\n              <SelectTags tags={tgList} onSelectChange={setFilter}/>\n          </Grid> \n\n          <Grid key='selectorFav' item>\n          \n          <FormControlLabel\n            control=\n              { \n                <Checkbox\n                  checked={favState}\n                  onChange={handleFavChange}\n                  value=\"checkedB\"\n                  color=\"primary\"\n              />\n              }\n              label=\"Scaredpanties' Favorites\"\n              />\n          <Favorite style={{color:\"red\"}}/>\n          </Grid>\n        </Grid>\n    </Container>\n    <CardGrid db={filterData(data,filter)}/>\n    <footer className={classes.footer}>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n        Lingerie reviews, advice, and tips with a touch of luxury\n        </Typography>\n        <Copyright />\n      </footer>\n   </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}