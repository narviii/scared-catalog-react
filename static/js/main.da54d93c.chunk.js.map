{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["url","useStyles","makeStyles","theme","icon","marginLeft","spacing","marginRight","marginBottom","heroContent","backgroundColor","palette","background","paper","padding","backgroundImage","width","height","backgroundPosition","backgroundSize","heroTypography","color","ms","textAlign","fontSize","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","display","flexDirection","justifyContent","stickyNav","position","zIndex","top","selectForm","margin","minWidth","breakpoints","down","cardMedia","cardContent","flexGrow","alignItems","chipGrid","flexWrap","footer","Copyright","Typography","variant","align","Link","href","Date","getFullYear","getOrigins","db","items","push","concat","Array","from","Set","map","a","SelectOrigin","props","classes","React","useState","origins","age","setAge","FormControl","className","InputLabel","id","Select","labelId","value","onChange","event","ReactGA","category","action","label","target","onSelectChange","state","origin","offsetReset","MenuItem","key","SelectTags","tags","tag","setTag","multiple","input","Input","eventFiltered","length","filter","elem","Post","Grid","item","xs","sm","md","Card","CardContent","CardMedia","image","cardCont","img","title","gutterBottom","guttertop","component","OutboundLink","eventLabel","to","link","fav","style","desc","CardActionArea","Box","Chip","size","SuchEmpty","paragraph","CardGrid","totalPosts","dbSliced","slice","offset","Container","maxWidth","limit","total","onClick","e","onOffsetChange","container","tagList","post","reduce","b","App","initialize","pageview","setFilter","favState","setFav","setOffset","tgList","data","unshift","fltr","dataSorted","sort","localeCompare","CssBaseline","justify","Button","IconButton","aria-label","FormControlLabel","verticalAlign","control","Checkbox","checked","tmp","intersection","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gqCAmCA,IAAMA,EAAM,0GAINC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,WAAYF,EAAMG,QAAQ,GAC1BC,YAAaJ,EAAMG,QAAQ,GAC3BE,aAAcL,EAAMG,QAAQ,IAE9BG,YAAa,CACXC,gBAAiBP,EAAMQ,QAAQC,WAAWC,MAE1CC,QAASX,EAAMG,QAAQ,EAAG,EAAG,GAC7BS,gBAAgB,+FAEhBC,MAAM,OACNC,OAAO,QAGPC,mBAAoB,SAEpBC,eAAgB,SAElBC,eAAe,CACbC,MAAM,SAERC,GAAG,CACDC,UAAU,SACVT,QAAQ,OAER,MAAM,CACJU,SAAU,UASdC,YAAa,CACXC,UAAWvB,EAAMG,QAAQ,IAE3BqB,SAAU,CACRC,WAAYzB,EAAMG,QAAQ,GAC1BuB,cAAe1B,EAAMG,QAAQ,IAG/BwB,KAAM,CACJb,OAAQ,OACRc,QAAS,OACTC,cAAe,SACfC,eAAgB,iBAIlBC,UAAU,CACRxB,gBAAgBP,EAAMQ,QAAQC,WAAWC,MAEzCsB,SAAS,SACTC,OAAO,KACPC,IAAI,KAINC,WAAW,aACTC,OAAQpC,EAAMG,QAAQ,GACtBkC,SAAU,OACTrC,EAAMsC,YAAYC,KAAK,MAAQ,CAC9BF,SAAS,SAMbG,UAAW,CAETf,WAAY,MACZpB,aAAa,QAGfoC,YAAa,CACXL,OAAO,QACPM,SAAU,EACVC,WAAW,YAGbC,SAAS,CACPhB,QAAQ,OACRiB,SAAU,OACVf,eAAgB,eAGhB,QAAS,CACPM,OAAQpC,EAAMG,QAAQ,MAK1B2C,OAAQ,CACNvC,gBAAiBP,EAAMQ,QAAQC,WAAWC,MAC1CC,QAASX,EAAMG,QAAQ,QAe3B,SAAS4C,IACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQ/B,MAAM,gBAAgBgC,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAMjC,MAAM,UAAUkC,KAAK,mCAA3B,iBAEQ,KACP,IAAIC,MAAOC,cACX,KAMP,IAAMC,EAAa,SAACC,GAClB,IAAIC,EAAM,GAGV,OAFAA,EAAMC,KAAK,OACXD,EAAMA,EAAME,OAAOC,MAAMC,KAAK,IAAIC,IAAIN,EAAGO,KAAI,SAAAC,GAAC,OAAEA,EAAC,cAInD,SAASC,EAAaC,GACpB,IAAMC,EAAUrE,IADU,EAEJsE,IAAMC,SAASH,EAAMI,QAAQ,IAFzB,mBAEnBC,EAFmB,KAEdC,EAFc,KAgB1B,OAEE,kBAACC,EAAA,EAAD,CAAaC,UAAWP,EAAQhC,YAChC,kBAACwC,EAAA,EAAD,CAAYC,GAAG,iBAAf,wBACA,kBAACC,EAAA,EAAD,CAEMC,QAAQ,gBACRF,GAAG,gBAEHG,MAAOR,EACPS,SAvBa,SAAAC,GACnBC,IAAQD,MAAM,CACZE,SAAU,OACVC,OAAQ,iBACRC,MAAM,eAGRb,EAAOS,EAAMK,OAAOP,OACpBb,EAAMqB,gBAAe,SAAAC,GAAK,YAAUA,EAAV,CAAgBC,OAAOR,EAAMK,OAAOP,WAC9Db,EAAMwB,YAAY,KAeXxB,EAAMI,QAAQP,KAAI,SAAC0B,GAAD,OAAW,kBAACE,EAAA,EAAD,CAAUC,IAAKH,EAAQV,MAAOU,GAASA,QAQ/E,SAASI,EAAW3B,GAClB,IAAMC,EAAUrE,IADS,EAGHsE,IAAMC,SAAS,CAACH,EAAM4B,KAAK,KAHxB,mBAGlBC,EAHkB,KAGbC,EAHa,KA8BzB,OAEE,kBAACvB,EAAA,EAAD,CAAaC,UAAWP,EAAQhC,YAChC,kBAACwC,EAAA,EAAD,CAAYC,GAAG,cAAf,gBACA,kBAACC,EAAA,EAAD,CAEMC,QAAQ,aACRF,GAAG,aACHqB,UAAQ,EACRC,MAAO,kBAACC,EAAA,EAAD,MACPpB,MAAOgB,EACPf,SApCa,SAAAC,GAEnB,IAAImB,EAAcnB,EAAMK,OAAOP,MAC/BG,IAAQD,MAAM,CACZE,SAAU,OACVC,OAAQ,cACRC,MAAM,eAGe,QAAnBe,EAAc,IAAcA,EAAcC,OAAO,IACnDD,EAAcA,EAAcE,QAAO,SAAAC,GAAI,MAAS,QAAPA,MAEvCH,EAAcC,OAAO,GACvBD,EAAc1C,KAAK,OAGyB,QAA1C0C,EAAeA,EAAcC,OAAO,IAAeD,EAAcC,OAAO,IAC1ED,EAAc,CAAC,QAEjBJ,EAAOI,GACPlC,EAAMqB,gBAAe,SAAAC,GAAK,YAAUA,EAAV,CAAgBM,KAAKM,OAC/ClC,EAAMwB,YAAY,KAgBXxB,EAAM4B,KAAK/B,KAAI,SAACgC,GAAD,OAAQ,kBAACJ,EAAA,EAAD,CAAUC,IAAKG,EAAKhB,MAAOgB,GAAMA,QAOnE,SAASS,GAAKtC,GAIZ,IAAMC,EAAUrE,IAChB,OACE,kBAAC2G,EAAA,EAAD,CAAMC,MAAI,EAAEC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACnB,kBAACC,EAAA,EAAD,CAAOpC,UAAWR,EAAMC,QAAQxC,MAE9B,kBAACoF,EAAA,EAAD,CAAarC,UAAWR,EAAMzB,aAC9B,kBAACuE,EAAA,EAAD,CACEtC,UAAWP,EAAQ3B,UACnByE,MAAQ/C,EAAMgD,SAASC,IACvBC,MAAOlD,EAAMgD,SAASE,QAEtB,kBAACpE,EAAA,EAAD,CAAYqE,cAAY,EAACC,WAAS,EAACrE,QAAQ,KAAKsE,UAAU,MACxD,kBAAC,IAAQC,aAAT,CAAsBlC,OAAO,SAASmC,WAAYvD,EAAMgD,SAASE,MAAOM,GAAIxD,EAAMgD,SAASS,MAAOzD,EAAMgD,SAASE,QAC1F,IAArBlD,EAAMgD,SAASU,IAAa,kBAAC,IAAD,CAAUC,MAAO,CAAC3G,MAAM,SAAU,MAGlE,kBAAC8B,EAAA,EAAD,CAAYqE,cAAY,EAACnG,MAAM,iBAAiBgD,EAAMgD,SAASzB,QAC/D,kBAACzC,EAAA,EAAD,KACGkB,EAAMgD,SAASY,OAIpB,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKtD,UAAWP,EAAQvB,UACrBsB,EAAMgD,SAASpB,KAAK/B,KAAI,SAAAgC,GAAG,OAAI,kBAACkC,EAAA,EAAD,CAAMC,KAAK,QAAQ7C,MAAOU,WAa9E,SAASoC,GAAUjE,GACjB,OACG,kBAAClB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAAShC,MAAM,gBAAgBkH,WAAS,GAAvE,oDAML,SAASC,GAASnE,GAWhB,IACIoE,EAAWpE,EAAMV,GAAG6C,OAClBlC,EAAUrE,IAEZyI,EAAWrE,EAAMV,GAAGgF,MAAMtE,EAAMuE,OAAOvE,EAAMuE,OAJjC,IAMhB,OACE,kBAACC,EAAA,EAAD,CAAWhE,UAAWP,EAAQ3C,SAAUmH,SAAS,MAC3C,kBAAC,IAAD,CAAYC,MARJ,GAQyBV,KAAK,QAAQW,MAAOP,EAAYQ,QAAW,SAACC,EAAGN,GAAJ,OAjB/DxD,EAiB0FwD,EAhB7GvE,EAAM8E,eAAe/D,QACrBC,IAAQD,MAAM,CACZE,SAAU,OACVC,OAAQ,cACRC,MAAM,eALV,IAAqBJ,GAiBmGwD,OAAQvE,EAAMuE,OAC9HZ,MAAO,CAACzG,UAAU,SAAUY,SAAS,SAASE,IAAI,OAAO3B,gBAAgB,WACxE2D,EAAMV,GAAG6C,OAAO,EACjB,kBAACI,EAAA,EAAD,CAAMwC,WAAS,EAAC9I,QAAS,EAAKwC,WAAW,WACtC4F,EAASxE,KAAI,SAAApC,GAAI,OAChB,kBAAC6E,GAAD,CAAMrC,QAASA,EAAS+C,SAAUvF,EAAMiE,IAAKjE,EAAKyF,YAGrD,kBAACe,GAAD,OAKX,IAAIe,GAAU,SAAC1F,GACb,OAAOI,MAAMC,KAAK,IAAIC,IAAIN,EAAGO,KAAI,SAAAoF,GAAI,OAAIA,EAAKrD,QAAMsD,QAAO,SAACpF,EAAEqF,GAAH,OAASrF,EAAEL,OAAO0F,SAuHhEC,OA3Gf,WA5MEpE,IAAQqE,WAAW,iBACnBrE,IAAQsE,SAAS,YAkOjB,IAAMrF,EAAUrE,IAvBH,EAwBeuE,mBAtBb,CACboB,OAAO,MACPK,KAAK,CAAC,OACN8B,KAAI,IALO,mBAwBNtB,EAxBM,KAwBEmD,EAxBF,OAyBcrF,IAAMC,UAAS,GAzB7B,mBAyBNqF,EAzBM,KAyBIC,EAzBJ,OA0BctF,mBAAS,GA1BvB,mBA0BNoE,EA1BM,KA0BCmB,EA1BD,KA4BTC,EAAOX,GAAQY,GAEnBD,EAAOE,QAAQ,OACd,IAxCiBD,EAAKE,EAwClBC,EAAaH,EAAKI,MAAK,SAASlG,EAAEqF,GAErC,OAAOrF,EAAEoD,MAAM+C,cAAcd,EAAEjC,UAIjC,OACC,6BACC,kBAACgD,EAAA,EAAD,MACA,yBAAK1F,UAAWP,EAAQ7D,aAClB,kBAACoI,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC3F,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASwB,UAAWP,EAAQlD,eAAgBoG,cAAY,GAAvF,kBAGA,kBAACrE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAAShC,MAAM,gBAAgBwD,UAAWP,EAAQlD,eAAgBmH,WAAS,GAA1G,6BAMR,kBAACM,EAAA,EAAD,CAAWC,SAAS,KAAKtB,cAAY,GACnC,kBAACZ,EAAA,EAAD,CAAMwC,WAAS,EAACoB,QAAQ,gBAAgB1H,WAAW,SAASxC,QAAS,GACjE,kBAACsG,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC4D,EAAA,EAAD,CAAQrH,QAAQ,WAAY/B,MAAM,UAAUkC,KAAK,kCAAjD,WAEF,kBAACqD,EAAA,EAAD,CAAMC,MAAI,GACR,kBAAC6D,EAAA,EAAD,CAAYrJ,MAAM,UAAUsJ,aAAW,wBAAwBpH,KAAK,kCAChE,kBAAC,IAAD,OAEJ,kBAACmH,EAAA,EAAD,CAAYrJ,MAAM,UAAUsJ,aAAW,aAAapH,KAAK,4CACrD,kBAAC,IAAD,OAEJ,kBAACmH,EAAA,EAAD,CAAYrJ,MAAM,UAAUsJ,aAAW,UAAUpH,KAAK,+EAClD,kBAAC,IAAD,OAEJ,kBAACmH,EAAA,EAAD,CAAYrJ,MAAM,UAAUsJ,aAAW,UAAUpH,KAAK,qCAClD,kBAAC,IAAD,UAKZ,kBAACsF,EAAA,EAAD,CAAYC,SAAS,KAAKjE,UAAWP,EAAQpC,WAC3C,kBAACkC,EAAD,CAAcsB,eAAgBkE,EAAWnF,QAASf,EAAWuG,GAAMI,OAAQxE,YAAakE,IACxF,kBAAC/D,EAAD,CAAYC,KAAM+D,EAAQtE,eAAgBkE,EAAW/D,YAAakE,IAClE,kBAACa,EAAA,EAAD,CAAkB5C,MAAO,CAACzH,YAAY,MAAMF,WAAW,MAAMwK,cAAc,WAAWtJ,UAAU,SAC1FuJ,QAEI,kBAACC,EAAA,EAAD,CAAUC,QAASnB,EAAU1E,SAtEnB,SAAAC,GAEtB0E,EAAO1E,EAAMK,OAAOuF,SACpB,IAAIC,EAAI7F,EAAMK,OAAOuF,QACrBpB,GAAU,SAAAjE,GAAK,YAAUA,EAAV,CAAgBoC,IAAIkD,OACnClB,EAAU,GACV1E,IAAQD,MAAM,CACZE,SAAU,OACVC,OAAQ,aACRC,MAAM,gBA6D4DK,YAAakE,EAAW7E,MAAM,WAAW7D,MAAM,YAEzGmE,MAAM,6BAEd,kBAAC,IAAD,CAAUwC,MAAO,CAAC3G,MAAM,UAI1B,kBAACmH,GAAD,CAAU7E,IA/FMsG,EA+FSG,EA/FJD,EA+Fe1D,EA9FnB,QAAd0D,EAAKvE,SAAgBqE,EAAOA,EAAKxD,QAAO,SAAAC,GAAI,OAAEA,EAAKd,SAASuE,EAAKvE,YACtD,IAAXuE,EAAKpC,MAAYkC,EAAKA,EAAKxD,QAAO,SAAAC,GAAI,OAAa,IAAXA,EAAKqB,QAC9B,QAAfoC,EAAKlE,KAAK,KAAYgE,EAAOA,EAAKxD,QAAO,SAAAC,GAAI,OAA6C,IAA3CwE,uBAAaxE,EAAKT,KAAKkE,EAAKlE,MAAMO,WAE9EyD,GA0FuCrB,OAAQA,EAAQO,eAAgBY,IAE7E,6BACA,kBAAClB,EAAA,EAAD,CAAWC,SAAS,KAAKd,MAAO,CAACzG,UAAU,WACnC,kBAAC4B,EAAA,EAAD,yBAA8BiH,EAAW5D,OAAzC,uCAAqF9C,EAAW0G,GAAY5D,OAA5G,iDAER,kBAACqC,EAAA,EAAD,CAAWC,SAAS,KAAKjE,UAAWP,EAAQhD,GAAIkJ,QAAQ,iBACpD,kBAACrH,EAAA,EAAD,CAAYqE,cAAY,EAACpE,QAAQ,MAAjC,uCACA,kBAAC,IAAD,CAAoBpD,IAAKA,MAG7B,4BAAQ6E,UAAWP,EAAQrB,QACvB,kBAACE,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,SAAShC,MAAM,gBAAgBqG,UAAU,KAA/E,+HAGA,kBAACxE,EAAD,SCxbYiI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.da54d93c.chunk.js","sourcesContent":["import React from 'react';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\"\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport Chip from '@material-ui/core/Chip';\nimport data from \"./dbFiltered\"; \nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { FormControl, CardHeader } from '@material-ui/core';\nimport { useState } from 'react';\nimport {intersection} from 'lodash'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport ReactGA from 'react-ga';\nimport Input from '@material-ui/core/Input';\nimport IconButton from '@material-ui/core/IconButton';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport { tsExpressionWithTypeArguments } from '@babel/types';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Pagination from \"material-ui-flat-pagination\";\n\nconst url = \"https://scaredpanties.us20.list-manage.com/subscribe/post?u=65173dffd9ab714c0d2d985ab&amp;id=ed2dc9ceb2\";\n\nconst imgUrl=\"https://blog.scaredpanties.com/content/images/2019/12/Screen-Shot-2019-12-08-at-12.57.58-AM.png\"\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    \n    padding: theme.spacing(8, 0, 6),\n    backgroundImage:\"url(\" + \"https://blog.scaredpanties.com/content/images/size/w2000/2019/06/B0010006_extended2.jpg\"+\")\",\n    \n    width:'100%',\n    height:' 100%',\n\n    \n    backgroundPosition: 'center',\n    \n    backgroundSize: 'cover'\n  },\n  heroTypography:{\n    color:'white'\n  },\n  ms:{\n    textAlign:\"center\",\n    padding:\"30px\",\n    \n    '& *':{\n      fontSize: \"1.2em\",\n      \n      \n  },\n\n\n  \n    \n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    \n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: \"space-between\"\n    \n    \n  },\n  stickyNav:{\n    backgroundColor:theme.palette.background.paper,\n    \n    position:\"sticky\",\n    zIndex:\"10\",\n    top:\"0\",\n    \n  },\n\n  selectForm: {\n    margin: theme.spacing(1),\n    minWidth: \"30%\",\n    [theme.breakpoints.down('xs')]: {\n      minWidth:\"100%\"\n    },\n  },\n\n  \n\n  cardMedia: {\n    \n    paddingTop: '75%', // 16:9\n    marginBottom:\"10px\"\n    \n  },\n  cardContent: {\n    margin:\"200px\",\n    flexGrow: 1,\n    alignItems:\"flex-end\",\n  \n  },\n  chipGrid:{\n    display:\"flex\",\n    flexWrap: 'wrap',\n    justifyContent: \"space-evenly\",\n    \n    \n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n    \n    \n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\n\n\n//UA-39274880-3 prod\n//UA-39274880-4 dev\n\nfunction initializeReactGAmain() {\n  ReactGA.initialize('UA-39274880-3');\n  ReactGA.pageview('/catalog');\n}\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://blog.scaredpanties.com/\">\n        scaredpanties\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\nconst getOrigins = (db) =>{\n  let items=[]\n  items.push('All')\n  items=items.concat(Array.from(new Set(db.map(a=>a[\"origin\"]))))\n  return items\n}\n\nfunction SelectOrigin(props){\n  const classes = useStyles();\n  const [age, setAge] = React.useState(props.origins[0]);\n  const handleChange = event => {\n    ReactGA.event({\n      category: 'User',\n      action: 'select country',\n      label:'navigation'\n    });\n\n    setAge(event.target.value);\n    props.onSelectChange(state => ({ ...state,origin:event.target.value }))\n    props.offsetReset(0)\n    \n  };\n  \n  return(\n    \n    <FormControl className={classes.selectForm}>\n    <InputLabel id=\"origin-select\">Brand origin country</InputLabel>\n    <Select\n          \n          labelId=\"origin-select\"\n          id=\"origin-select\"\n          \n          value={age}\n          onChange={handleChange}>\n          {props.origins.map((origin)=> <MenuItem key={origin} value={origin}>{origin}</MenuItem>)}\n          \n        </Select>\n      </FormControl>\n   \n  )\n}\n\nfunction SelectTags(props) {\n  const classes = useStyles();\n  \n  const [tag, setTag] = React.useState([props.tags[0]]);\n\n  const handleChange = event => { \n    \n    let eventFiltered=event.target.value\n    ReactGA.event({\n      category: 'User',\n      action: 'select tags',\n      label:'navigation'\n    });\n\n    if (eventFiltered[0]==='All' && eventFiltered.length>1){\n      eventFiltered=eventFiltered.filter(elem=>elem!=='All')\n    }\n    if (eventFiltered.length<1){\n      eventFiltered.push('All')\n    }\n\n    if (eventFiltered[(eventFiltered.length-1)]==='All' && eventFiltered.length>1){\n      eventFiltered=['All']\n    }\n    setTag(eventFiltered);\n    props.onSelectChange(state => ({ ...state,tags:eventFiltered}))\n    props.offsetReset(0)\n    \n  };\n  \n  return(\n    \n    <FormControl className={classes.selectForm}>\n    <InputLabel id=\"tag-select\">Tag selector</InputLabel>\n    <Select\n          \n          labelId=\"tag-select\"\n          id=\"tag-select\"\n          multiple\n          input={<Input/>}\n          value={tag}\n          onChange={handleChange}>\n          {props.tags.map((tag)=> <MenuItem key={tag} value={tag}>{tag}</MenuItem>)}\n        </Select>\n      </FormControl>\n  \n  )\n}\n\nfunction Post(props){\n\n  \n\n  const classes = useStyles();\n  return(\n    <Grid item  xs={12} sm={6} md={4}>\n                <Card  className={props.classes.card}>\n                  \n                  <CardContent className={props.cardContent} >\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image= {props.cardCont.img}\n                    title={props.cardCont.title}\n                  />\n                    <Typography gutterBottom guttertop variant=\"h5\" component=\"h2\">\n                      <ReactGA.OutboundLink target=\"_blank\" eventLabel={props.cardCont.title} to={props.cardCont.link}>{props.cardCont.title}</ReactGA.OutboundLink>\n                      { props.cardCont.fav===true ? <Favorite style={{color:\"red\"}}/>:null} \n                    </Typography>\n                    \n                    <Typography gutterBottom color=\"textSecondary\">{props.cardCont.origin}</Typography>\n                    <Typography >\n                      {props.cardCont.desc}\n                    </Typography>\n                    \n                  </CardContent>\n                  <CardActionArea>\n                  <Box className={classes.chipGrid}>\n                    {props.cardCont.tags.map(tag => <Chip size=\"small\" label={tag}/>)}\n                    </Box> \n\n                  </CardActionArea>\n                  \n                     \n                      \n                  \n                </Card>\n              </Grid>\n  )\n}\n\nfunction SuchEmpty(props){\n  return (\n     <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n     Such empty!!! Come back soon, i will add more...\n     </Typography>\n  )\n}\n\nfunction CardGrid(props){\n\n  function handleClick(event) {\n    props.onOffsetChange(event)\n    ReactGA.event({\n      category: 'User',\n      action: 'select page',\n      label:'navigation'\n    });\n    \n  }\n  let postPerPage=12\n  let totalPosts=props.db.length\n  const classes = useStyles();\n  \n  let dbSliced = props.db.slice(props.offset,props.offset+postPerPage)\n\n  return (\n    <Container className={classes.cardGrid} maxWidth=\"md\"  >\n          <Pagination limit={postPerPage}  size='large' total={totalPosts} onClick = {(e, offset) => handleClick(offset)} offset={props.offset} \n          style={{textAlign:\"center\" ,position:\"sticky\",top:\"50px\",backgroundColor:\"white\"}}/>\n          {props.db.length>0?\n          <Grid container spacing={4}   alignItems=\"stretch\">\n            {dbSliced.map(card => (\n              <Post classes={classes} cardCont={card} key={card.title}/>\n            ))}\n          </Grid>\n          :<SuchEmpty/>}\n        </Container>\n  )\n}\n\nlet tagList = (db) => {\n  return Array.from(new Set(db.map(post => post.tags).reduce((a,b) => a.concat(b))))\n}\n\nfunction filterData(data,fltr){\n   if (fltr.origin!=='All') data = data.filter(elem=>elem.origin===fltr.origin)\n   if (fltr.fav===true) data=data.filter(elem=>elem.fav===true)\n   if (fltr.tags[0]!=='All') data = data.filter(elem=>intersection(elem.tags,fltr.tags).length!==0)\n   \n   return data\n}\n\n\nfunction App() {\n  \n  let initFilter={\n    origin:\"All\",\n    tags:['All'],\n    fav:false\n  }\n  \n  const handleFavChange = event => {\n    \n    setFav(event.target.checked);\n    let tmp=event.target.checked\n    setFilter(state => ({ ...state,fav:tmp}))\n    setOffset(0)\n    ReactGA.event({\n      category: 'User',\n      action: 'select fav',\n      label:'navigation'\n    });\n    \n  };\n \n  initializeReactGAmain()\n  const classes = useStyles();\n  const [filter, setFilter] = useState(initFilter);\n  const [favState, setFav] = React.useState(false)\n  const [offset,setOffset] = useState(0)\n\n  let tgList=tagList(data)\n               \n  tgList.unshift('All')\n   let dataSorted = data.sort(function(a,b){\n    \n    return a.title.localeCompare(b.title)    \n  })\n\n  \n  return (\n   <div>\n    <CssBaseline/>\n    <div className={classes.heroContent}>\n          <Container maxWidth=\"md\">\n            <Typography variant=\"h3\" align=\"center\" className={classes.heroTypography} gutterBottom >\n            scaredpanties'\n            </Typography>\n            <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" className={classes.heroTypography} paragraph>\n              lingerie brands catalog\n            </Typography>\n          \n          </Container>\n        </div>\n    <Container maxWidth=\"md\" gutterBottom>\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\n          <Grid item>\n            <Button variant=\"outlined\"  color=\"primary\" href=\"https://blog.scaredpanties.com\" > BLOG </Button>\n          </Grid>\n          <Grid item>\n            <IconButton color=\"primary\" aria-label=\"Mail to scaredpanties\" href=\"mailto:scaredpanties@gmail.com\">\n                <MailIcon/>\n            </IconButton>\n            <IconButton color=\"primary\" aria-label=\"Instagramm\" href=\"https://www.instagram.com/scaredpanties/\">\n                <InstagramIcon/>\n            </IconButton>\n            <IconButton color=\"primary\" aria-label=\"Youtube\" href=\"https://www.youtube.com/channel/UCge0-VKn4mfJfGt1ZCMbcpQ?view_as=subscriber\">\n                <YouTubeIcon/>\n            </IconButton>\n            <IconButton color=\"primary\" aria-label=\"Twitter\" href=\"https://twitter.com/scaredpanties\">\n                <TwitterIcon/>\n            </IconButton>\n          </Grid>\n        </Grid>\n    </Container>\n    <Container  maxWidth=\"md\" className={classes.stickyNav} >   \n      <SelectOrigin onSelectChange={setFilter} origins={getOrigins(data).sort()} offsetReset={setOffset}/>\n      <SelectTags tags={tgList} onSelectChange={setFilter} offsetReset={setOffset}/>\n      <FormControlLabel style={{marginRight:\"0px\",marginLeft:\"0px\",verticalAlign:\"baseline\",textAlign:\"right\"}}\n            control=\n              { \n                <Checkbox checked={favState} onChange={handleFavChange} offsetReset={setOffset} value=\"checkedB\" color=\"primary\"/>\n              }\n              label=\"scaredpanties' favorites\"\n              />\n      <Favorite style={{color:\"red\"}}/>   \n    \n    </Container>\n  \n    <CardGrid db={filterData(dataSorted,filter)} offset={offset} onOffsetChange={setOffset} />\n    \n    <div >\n    <Container maxWidth=\"md\" style={{textAlign:\"center\"}}>\n            <Typography>Currently i have {dataSorted.length} lingerie brands in my catalog from {getOrigins(dataSorted).length} countries. Come back soon, i will add more!</Typography>\n    </Container>\n    <Container maxWidth=\"sm\" className={classes.ms} justify=\"space-between\"  >\n        <Typography gutterBottom variant=\"h6\">Subscribe to scaredpanties updates:</Typography>\n        <MailchimpSubscribe url={url}/>\n    </Container>\n    </div>\n    <footer className={classes.footer} >\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n        Lingerie reviews, advice, and tips with a touch of luxury. Feel free to reach out to me via e-mail scaredpanties@gmail.com.\n        </Typography>\n        <Copyright />\n      </footer>\n   </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}